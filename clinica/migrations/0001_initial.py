# Generated by Django 4.0.5 on 2022-07-02 18:05

import clinica.models
import datetime
from django.conf import settings
import django.contrib.postgres.constraints
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
            ],
            options={
                'ordering': ['start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(unique=True)),
                ('duration', models.DurationField()),
                ('prise', models.IntegerField()),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locations', models.ManyToManyField(to='clinica.location')),
                ('services', models.ManyToManyField(to='clinica.service')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.CheckConstraint(check=models.Q(('prise__gte', 0)), name='prise_positive'),
        ),
        migrations.AddConstraint(
            model_name='service',
            constraint=models.CheckConstraint(check=models.Q(('duration__gt', datetime.timedelta(0)), ('duration__lte', datetime.timedelta(days=1))), name='duration_positive'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointement',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.client'),
        ),
        migrations.AddField(
            model_name='appointement',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.location'),
        ),
        migrations.AddField(
            model_name='appointement',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.service'),
        ),
        migrations.AddField(
            model_name='appointement',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinica.worker'),
        ),
        migrations.AddConstraint(
            model_name='appointement',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=((clinica.models.TsTzRange('start_datetime', 'end_datetime', django.contrib.postgres.fields.ranges.RangeBoundary()), '&&'), ('location', '=')), name='exclude_overlapping_reservations'),
        ),
        migrations.AddConstraint(
            model_name='appointement',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=((clinica.models.TsTzRange('start_datetime', 'end_datetime', django.contrib.postgres.fields.ranges.RangeBoundary()), '&&'), ('client', '=')), name='exclude_overlapping_clientss'),
        ),
        migrations.AddConstraint(
            model_name='appointement',
            constraint=django.contrib.postgres.constraints.ExclusionConstraint(expressions=((clinica.models.TsTzRange('start_datetime', 'end_datetime', django.contrib.postgres.fields.ranges.RangeBoundary()), '&&'), ('worker', '=')), name='exclude_overlapping_workers'),
        ),
    ]
